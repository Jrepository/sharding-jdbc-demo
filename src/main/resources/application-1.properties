spring.main.allow-bean-definition-overriding=true
server.port=8888

#?????????order_db_1??????order_db1??orderDb1???
spring.shardingsphere.datasource.names=db1,db2

#spring.shardingsphere.datasource.${database_name}.type=
spring.shardingsphere.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.db1.url=jdbc:mysql://127.0.0.1:3306/order_db_1?useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.db1.username=root
spring.shardingsphere.datasource.db1.password=123456

spring.shardingsphere.datasource.db2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.db2.url=jdbc:mysql://127.0.0.1:3306/order_db_2?useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.db2.username=root
spring.shardingsphere.datasource.db2.password=123456

spring.shardingsphere.sharding.tables.orders.actual-data-nodes=db$->{1..2}.orders_$->{1..2}

spring.shardingsphere.sharding.tables.orders.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.orders.table-strategy.inline.algorithm-expression=orders_$->{id % 2+1}
spring.shardingsphere.sharding.tables.orders.key-generator.column=id
#spring.shardingsphere.sharding.tables.orders.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.orders.key-generator.type=SNOWFLAKE

spring.shardingsphere.props.sql.show=true

